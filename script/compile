#!/usr/bin/env bash
#
# Usage:
#    compile <lang-name>
#    compile all
#
# Examples:
#    compile rust
#    compile cpp
#
#    compile changed 0.10.7

set -eo pipefail

. $(dirname $0)/_grammars

lang="$1"
target=""
version=""

# Parse named parameters.
POSITIONAL=()
while [[ $# -gt 0 ]]; do
    case "$1" in
        -target)
            target="$2"; shift;;
        -version)
            version="$2"; shift;;
        -lang)
            lang="$2"; shift;;
        *)
            POSITIONAL+=("$1")
            ;;
    esac
    shift
done

case $lang in
    all)
        echo "[INFO] Run ${JOBS:-`getconf _NPROCESSORS_ONLN`} procs in parallel"
        printf "%s\n" "${!grammars[@]}" | xargs -I{} -P"${JOBS:-`getconf _NPROCESSORS_ONLN`}" $0 -lang {} -target "$target" || true
        create_bundle $version
        ;;
    *)
        grammar_spec=${grammars[$lang]}
        if [[ -n "$grammar_spec" ]]; then
            echo "[INFO] Run: compile_grammar -lang $lang $grammar_spec ${target:+-target $target}"
            compile_grammar -lang "$lang" $grammar_spec ${target:+-target $target}
        else
            echo "Unknown language grammar: $lang"
        fi
        ;;
esac
